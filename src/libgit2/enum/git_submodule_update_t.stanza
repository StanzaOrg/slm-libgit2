; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_submodule_update_t :
  import core

public deftype git_submodule_update_t <: Equalable
public deftype GIT_SUBMODULE_UPDATE_CHECKOUT <: git_submodule_update_t
public deftype GIT_SUBMODULE_UPDATE_REBASE <: git_submodule_update_t
public deftype GIT_SUBMODULE_UPDATE_MERGE <: git_submodule_update_t
public deftype GIT_SUBMODULE_UPDATE_NONE <: git_submodule_update_t
public deftype GIT_SUBMODULE_UPDATE_DEFAULT <: git_submodule_update_t

public val GIT_SUBMODULE_UPDATE_CHECKOUT = new GIT_SUBMODULE_UPDATE_CHECKOUT
public val GIT_SUBMODULE_UPDATE_REBASE = new GIT_SUBMODULE_UPDATE_REBASE
public val GIT_SUBMODULE_UPDATE_MERGE = new GIT_SUBMODULE_UPDATE_MERGE
public val GIT_SUBMODULE_UPDATE_NONE = new GIT_SUBMODULE_UPDATE_NONE
public val GIT_SUBMODULE_UPDATE_DEFAULT = new GIT_SUBMODULE_UPDATE_DEFAULT

public defn to-int (v:git_submodule_update_t) -> Int:
  match(v) :
    (x:GIT_SUBMODULE_UPDATE_CHECKOUT) : 1
    (x:GIT_SUBMODULE_UPDATE_REBASE) : 2
    (x:GIT_SUBMODULE_UPDATE_MERGE) : 3
    (x:GIT_SUBMODULE_UPDATE_NONE) : 4
    (x:GIT_SUBMODULE_UPDATE_DEFAULT) : 0

public defn git_submodule_update_t (v:Int) -> git_submodule_update_t :
  switch {v == _}:
    1 : GIT_SUBMODULE_UPDATE_CHECKOUT
    2 : GIT_SUBMODULE_UPDATE_REBASE
    3 : GIT_SUBMODULE_UPDATE_MERGE
    4 : GIT_SUBMODULE_UPDATE_NONE
    0 : GIT_SUBMODULE_UPDATE_DEFAULT
    else: throw(Exception("git_submodule_update_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_submodule_update_t (v:int) -> ref<git_submodule_update_t> :
  return git_submodule_update_t(new Int{v})

public defmethod print (o:OutputStream, v:git_submodule_update_t) :
  match(v) :
    (x:GIT_SUBMODULE_UPDATE_CHECKOUT) : print(o, "GIT_SUBMODULE_UPDATE_CHECKOUT")
    (x:GIT_SUBMODULE_UPDATE_REBASE) : print(o, "GIT_SUBMODULE_UPDATE_REBASE")
    (x:GIT_SUBMODULE_UPDATE_MERGE) : print(o, "GIT_SUBMODULE_UPDATE_MERGE")
    (x:GIT_SUBMODULE_UPDATE_NONE) : print(o, "GIT_SUBMODULE_UPDATE_NONE")
    (x:GIT_SUBMODULE_UPDATE_DEFAULT) : print(o, "GIT_SUBMODULE_UPDATE_DEFAULT")

public defmethod equal? (a:git_submodule_update_t, b:git_submodule_update_t) -> True|False :
  to-int(a) == to-int(b)

