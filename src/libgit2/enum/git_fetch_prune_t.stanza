; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_fetch_prune_t :
  import core

public deftype git_fetch_prune_t <: Equalable
public deftype GIT_FETCH_PRUNE_UNSPECIFIED <: git_fetch_prune_t
public deftype GIT_FETCH_PRUNE <: git_fetch_prune_t
public deftype GIT_FETCH_NO_PRUNE <: git_fetch_prune_t

public val GIT_FETCH_PRUNE_UNSPECIFIED = new GIT_FETCH_PRUNE_UNSPECIFIED
public val GIT_FETCH_PRUNE = new GIT_FETCH_PRUNE
public val GIT_FETCH_NO_PRUNE = new GIT_FETCH_NO_PRUNE

public defn to-int (v:git_fetch_prune_t) -> Int:
  match(v) :
    (x:GIT_FETCH_PRUNE_UNSPECIFIED) : 0
    (x:GIT_FETCH_PRUNE) : 1
    (x:GIT_FETCH_NO_PRUNE) : 2

public defn git_fetch_prune_t (v:Int) -> git_fetch_prune_t :
  switch {v == _}:
    0 : GIT_FETCH_PRUNE_UNSPECIFIED
    1 : GIT_FETCH_PRUNE
    2 : GIT_FETCH_NO_PRUNE
    else: throw(Exception("git_fetch_prune_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_fetch_prune_t (v:int) -> ref<git_fetch_prune_t> :
  return git_fetch_prune_t(new Int{v})

public defmethod print (o:OutputStream, v:git_fetch_prune_t) :
  match(v) :
    (x:GIT_FETCH_PRUNE_UNSPECIFIED) : print(o, "GIT_FETCH_PRUNE_UNSPECIFIED")
    (x:GIT_FETCH_PRUNE) : print(o, "GIT_FETCH_PRUNE")
    (x:GIT_FETCH_NO_PRUNE) : print(o, "GIT_FETCH_NO_PRUNE")

public defmethod equal? (a:git_fetch_prune_t, b:git_fetch_prune_t) -> True|False :
  to-int(a) == to-int(b)

