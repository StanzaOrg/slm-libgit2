; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_tree_update_t :
  import core

public deftype git_tree_update_t <: Equalable
public deftype GIT_TREE_UPDATE_UPSERT <: git_tree_update_t
public deftype GIT_TREE_UPDATE_REMOVE <: git_tree_update_t

public val GIT_TREE_UPDATE_UPSERT = new GIT_TREE_UPDATE_UPSERT
public val GIT_TREE_UPDATE_REMOVE = new GIT_TREE_UPDATE_REMOVE

public defn to-int (v:git_tree_update_t) -> Int:
  match(v) :
    (x:GIT_TREE_UPDATE_UPSERT) : 0
    (x:GIT_TREE_UPDATE_REMOVE) : 1

public defn git_tree_update_t (v:Int) -> git_tree_update_t :
  switch {v == _}:
    0 : GIT_TREE_UPDATE_UPSERT
    1 : GIT_TREE_UPDATE_REMOVE
    else: throw(Exception("git_tree_update_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_tree_update_t (v:int) -> ref<git_tree_update_t> :
  return git_tree_update_t(new Int{v})

public defmethod print (o:OutputStream, v:git_tree_update_t) :
  match(v) :
    (x:GIT_TREE_UPDATE_UPSERT) : print(o, "GIT_TREE_UPDATE_UPSERT")
    (x:GIT_TREE_UPDATE_REMOVE) : print(o, "GIT_TREE_UPDATE_REMOVE")

public defmethod equal? (a:git_tree_update_t, b:git_tree_update_t) -> True|False :
  to-int(a) == to-int(b)

