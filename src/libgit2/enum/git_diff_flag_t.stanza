; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_diff_flag_t :
  import core

public deftype git_diff_flag_t <: Equalable
public deftype GIT_DIFF_FLAG_BINARY <: git_diff_flag_t
public deftype GIT_DIFF_FLAG_NOT_BINARY <: git_diff_flag_t
public deftype GIT_DIFF_FLAG_VALID_ID <: git_diff_flag_t
public deftype GIT_DIFF_FLAG_EXISTS <: git_diff_flag_t
public deftype GIT_DIFF_FLAG_VALID_SIZE <: git_diff_flag_t

public val GIT_DIFF_FLAG_BINARY = new GIT_DIFF_FLAG_BINARY
public val GIT_DIFF_FLAG_NOT_BINARY = new GIT_DIFF_FLAG_NOT_BINARY
public val GIT_DIFF_FLAG_VALID_ID = new GIT_DIFF_FLAG_VALID_ID
public val GIT_DIFF_FLAG_EXISTS = new GIT_DIFF_FLAG_EXISTS
public val GIT_DIFF_FLAG_VALID_SIZE = new GIT_DIFF_FLAG_VALID_SIZE

public defn to-int (v:git_diff_flag_t) -> Int:
  match(v) :
    (x:GIT_DIFF_FLAG_BINARY) : (1 << 0)
    (x:GIT_DIFF_FLAG_NOT_BINARY) : (1 << 1)
    (x:GIT_DIFF_FLAG_VALID_ID) : (1 << 2)
    (x:GIT_DIFF_FLAG_EXISTS) : (1 << 3)
    (x:GIT_DIFF_FLAG_VALID_SIZE) : (1 << 4)

public defn git_diff_flag_t (v:Int) -> git_diff_flag_t :
  switch {v == _}:
    (1 << 0) : GIT_DIFF_FLAG_BINARY
    (1 << 1) : GIT_DIFF_FLAG_NOT_BINARY
    (1 << 2) : GIT_DIFF_FLAG_VALID_ID
    (1 << 3) : GIT_DIFF_FLAG_EXISTS
    (1 << 4) : GIT_DIFF_FLAG_VALID_SIZE
    else: throw(Exception("git_diff_flag_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_diff_flag_t (v:int) -> ref<git_diff_flag_t> :
  return git_diff_flag_t(new Int{v})

public defmethod print (o:OutputStream, v:git_diff_flag_t) :
  match(v) :
    (x:GIT_DIFF_FLAG_BINARY) : print(o, "GIT_DIFF_FLAG_BINARY")
    (x:GIT_DIFF_FLAG_NOT_BINARY) : print(o, "GIT_DIFF_FLAG_NOT_BINARY")
    (x:GIT_DIFF_FLAG_VALID_ID) : print(o, "GIT_DIFF_FLAG_VALID_ID")
    (x:GIT_DIFF_FLAG_EXISTS) : print(o, "GIT_DIFF_FLAG_EXISTS")
    (x:GIT_DIFF_FLAG_VALID_SIZE) : print(o, "GIT_DIFF_FLAG_VALID_SIZE")

public defmethod equal? (a:git_diff_flag_t, b:git_diff_flag_t) -> True|False :
  to-int(a) == to-int(b)

