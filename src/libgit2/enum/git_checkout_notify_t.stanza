; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_checkout_notify_t :
  import core

public deftype git_checkout_notify_t <: Equalable
public deftype GIT_CHECKOUT_NOTIFY_NONE <: git_checkout_notify_t
public deftype GIT_CHECKOUT_NOTIFY_CONFLICT <: git_checkout_notify_t
public deftype GIT_CHECKOUT_NOTIFY_DIRTY <: git_checkout_notify_t
public deftype GIT_CHECKOUT_NOTIFY_UPDATED <: git_checkout_notify_t
public deftype GIT_CHECKOUT_NOTIFY_UNTRACKED <: git_checkout_notify_t
public deftype GIT_CHECKOUT_NOTIFY_IGNORED <: git_checkout_notify_t
public deftype GIT_CHECKOUT_NOTIFY_ALL <: git_checkout_notify_t

public val GIT_CHECKOUT_NOTIFY_NONE = new GIT_CHECKOUT_NOTIFY_NONE
public val GIT_CHECKOUT_NOTIFY_CONFLICT = new GIT_CHECKOUT_NOTIFY_CONFLICT
public val GIT_CHECKOUT_NOTIFY_DIRTY = new GIT_CHECKOUT_NOTIFY_DIRTY
public val GIT_CHECKOUT_NOTIFY_UPDATED = new GIT_CHECKOUT_NOTIFY_UPDATED
public val GIT_CHECKOUT_NOTIFY_UNTRACKED = new GIT_CHECKOUT_NOTIFY_UNTRACKED
public val GIT_CHECKOUT_NOTIFY_IGNORED = new GIT_CHECKOUT_NOTIFY_IGNORED
public val GIT_CHECKOUT_NOTIFY_ALL = new GIT_CHECKOUT_NOTIFY_ALL

public defn to-int (v:git_checkout_notify_t) -> Int:
  match(v) :
    (x:GIT_CHECKOUT_NOTIFY_NONE) : 0
    (x:GIT_CHECKOUT_NOTIFY_CONFLICT) : (1 << 0)
    (x:GIT_CHECKOUT_NOTIFY_DIRTY) : (1 << 1)
    (x:GIT_CHECKOUT_NOTIFY_UPDATED) : (1 << 2)
    (x:GIT_CHECKOUT_NOTIFY_UNTRACKED) : (1 << 3)
    (x:GIT_CHECKOUT_NOTIFY_IGNORED) : (1 << 4)
    (x:GIT_CHECKOUT_NOTIFY_ALL) : 0xffff

public defn git_checkout_notify_t (v:Int) -> git_checkout_notify_t :
  switch {v == _}:
    0 : GIT_CHECKOUT_NOTIFY_NONE
    (1 << 0) : GIT_CHECKOUT_NOTIFY_CONFLICT
    (1 << 1) : GIT_CHECKOUT_NOTIFY_DIRTY
    (1 << 2) : GIT_CHECKOUT_NOTIFY_UPDATED
    (1 << 3) : GIT_CHECKOUT_NOTIFY_UNTRACKED
    (1 << 4) : GIT_CHECKOUT_NOTIFY_IGNORED
    0xffff : GIT_CHECKOUT_NOTIFY_ALL
    else: throw(Exception("git_checkout_notify_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_checkout_notify_t (v:int) -> ref<git_checkout_notify_t> :
  return git_checkout_notify_t(new Int{v})

public defmethod print (o:OutputStream, v:git_checkout_notify_t) :
  match(v) :
    (x:GIT_CHECKOUT_NOTIFY_NONE) : print(o, "GIT_CHECKOUT_NOTIFY_NONE")
    (x:GIT_CHECKOUT_NOTIFY_CONFLICT) : print(o, "GIT_CHECKOUT_NOTIFY_CONFLICT")
    (x:GIT_CHECKOUT_NOTIFY_DIRTY) : print(o, "GIT_CHECKOUT_NOTIFY_DIRTY")
    (x:GIT_CHECKOUT_NOTIFY_UPDATED) : print(o, "GIT_CHECKOUT_NOTIFY_UPDATED")
    (x:GIT_CHECKOUT_NOTIFY_UNTRACKED) : print(o, "GIT_CHECKOUT_NOTIFY_UNTRACKED")
    (x:GIT_CHECKOUT_NOTIFY_IGNORED) : print(o, "GIT_CHECKOUT_NOTIFY_IGNORED")
    (x:GIT_CHECKOUT_NOTIFY_ALL) : print(o, "GIT_CHECKOUT_NOTIFY_ALL")

public defmethod equal? (a:git_checkout_notify_t, b:git_checkout_notify_t) -> True|False :
  to-int(a) == to-int(b)

