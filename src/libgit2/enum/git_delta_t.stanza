; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_delta_t :
  import core

public deftype git_delta_t <: Equalable
public deftype GIT_DELTA_UNMODIFIED <: git_delta_t
public deftype GIT_DELTA_ADDED <: git_delta_t
public deftype GIT_DELTA_DELETED <: git_delta_t
public deftype GIT_DELTA_MODIFIED <: git_delta_t
public deftype GIT_DELTA_RENAMED <: git_delta_t
public deftype GIT_DELTA_COPIED <: git_delta_t
public deftype GIT_DELTA_IGNORED <: git_delta_t
public deftype GIT_DELTA_UNTRACKED <: git_delta_t
public deftype GIT_DELTA_TYPECHANGE <: git_delta_t
public deftype GIT_DELTA_UNREADABLE <: git_delta_t
public deftype GIT_DELTA_CONFLICTED <: git_delta_t

public val GIT_DELTA_UNMODIFIED = new GIT_DELTA_UNMODIFIED
public val GIT_DELTA_ADDED = new GIT_DELTA_ADDED
public val GIT_DELTA_DELETED = new GIT_DELTA_DELETED
public val GIT_DELTA_MODIFIED = new GIT_DELTA_MODIFIED
public val GIT_DELTA_RENAMED = new GIT_DELTA_RENAMED
public val GIT_DELTA_COPIED = new GIT_DELTA_COPIED
public val GIT_DELTA_IGNORED = new GIT_DELTA_IGNORED
public val GIT_DELTA_UNTRACKED = new GIT_DELTA_UNTRACKED
public val GIT_DELTA_TYPECHANGE = new GIT_DELTA_TYPECHANGE
public val GIT_DELTA_UNREADABLE = new GIT_DELTA_UNREADABLE
public val GIT_DELTA_CONFLICTED = new GIT_DELTA_CONFLICTED

public defn to-int (v:git_delta_t) -> Int:
  match(v) :
    (x:GIT_DELTA_UNMODIFIED) : 0
    (x:GIT_DELTA_ADDED) : 1
    (x:GIT_DELTA_DELETED) : 2
    (x:GIT_DELTA_MODIFIED) : 3
    (x:GIT_DELTA_RENAMED) : 4
    (x:GIT_DELTA_COPIED) : 5
    (x:GIT_DELTA_IGNORED) : 6
    (x:GIT_DELTA_UNTRACKED) : 7
    (x:GIT_DELTA_TYPECHANGE) : 8
    (x:GIT_DELTA_UNREADABLE) : 9
    (x:GIT_DELTA_CONFLICTED) : 10

public defn git_delta_t (v:Int) -> git_delta_t :
  switch {v == _}:
    0 : GIT_DELTA_UNMODIFIED
    1 : GIT_DELTA_ADDED
    2 : GIT_DELTA_DELETED
    3 : GIT_DELTA_MODIFIED
    4 : GIT_DELTA_RENAMED
    5 : GIT_DELTA_COPIED
    6 : GIT_DELTA_IGNORED
    7 : GIT_DELTA_UNTRACKED
    8 : GIT_DELTA_TYPECHANGE
    9 : GIT_DELTA_UNREADABLE
    10 : GIT_DELTA_CONFLICTED
    else: throw(Exception("git_delta_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_delta_t (v:int) -> ref<git_delta_t> :
  return git_delta_t(new Int{v})

public defmethod print (o:OutputStream, v:git_delta_t) :
  match(v) :
    (x:GIT_DELTA_UNMODIFIED) : print(o, "GIT_DELTA_UNMODIFIED")
    (x:GIT_DELTA_ADDED) : print(o, "GIT_DELTA_ADDED")
    (x:GIT_DELTA_DELETED) : print(o, "GIT_DELTA_DELETED")
    (x:GIT_DELTA_MODIFIED) : print(o, "GIT_DELTA_MODIFIED")
    (x:GIT_DELTA_RENAMED) : print(o, "GIT_DELTA_RENAMED")
    (x:GIT_DELTA_COPIED) : print(o, "GIT_DELTA_COPIED")
    (x:GIT_DELTA_IGNORED) : print(o, "GIT_DELTA_IGNORED")
    (x:GIT_DELTA_UNTRACKED) : print(o, "GIT_DELTA_UNTRACKED")
    (x:GIT_DELTA_TYPECHANGE) : print(o, "GIT_DELTA_TYPECHANGE")
    (x:GIT_DELTA_UNREADABLE) : print(o, "GIT_DELTA_UNREADABLE")
    (x:GIT_DELTA_CONFLICTED) : print(o, "GIT_DELTA_CONFLICTED")

public defmethod equal? (a:git_delta_t, b:git_delta_t) -> True|False :
  to-int(a) == to-int(b)

