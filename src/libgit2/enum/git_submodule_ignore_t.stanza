; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_submodule_ignore_t :
  import core

public deftype git_submodule_ignore_t <: Equalable
public deftype GIT_SUBMODULE_IGNORE_UNSPECIFIED <: git_submodule_ignore_t
public deftype GIT_SUBMODULE_IGNORE_NONE <: git_submodule_ignore_t
public deftype GIT_SUBMODULE_IGNORE_UNTRACKED <: git_submodule_ignore_t
public deftype GIT_SUBMODULE_IGNORE_DIRTY <: git_submodule_ignore_t
public deftype GIT_SUBMODULE_IGNORE_ALL <: git_submodule_ignore_t

public val GIT_SUBMODULE_IGNORE_UNSPECIFIED = new GIT_SUBMODULE_IGNORE_UNSPECIFIED
public val GIT_SUBMODULE_IGNORE_NONE = new GIT_SUBMODULE_IGNORE_NONE
public val GIT_SUBMODULE_IGNORE_UNTRACKED = new GIT_SUBMODULE_IGNORE_UNTRACKED
public val GIT_SUBMODULE_IGNORE_DIRTY = new GIT_SUBMODULE_IGNORE_DIRTY
public val GIT_SUBMODULE_IGNORE_ALL = new GIT_SUBMODULE_IGNORE_ALL

public defn to-int (v:git_submodule_ignore_t) -> Int:
  match(v) :
    (x:GIT_SUBMODULE_IGNORE_UNSPECIFIED) : -1
    (x:GIT_SUBMODULE_IGNORE_NONE) : 1
    (x:GIT_SUBMODULE_IGNORE_UNTRACKED) : 2
    (x:GIT_SUBMODULE_IGNORE_DIRTY) : 3
    (x:GIT_SUBMODULE_IGNORE_ALL) : 4

public defn git_submodule_ignore_t (v:Int) -> git_submodule_ignore_t :
  switch {v == _}:
    -1 : GIT_SUBMODULE_IGNORE_UNSPECIFIED
    1 : GIT_SUBMODULE_IGNORE_NONE
    2 : GIT_SUBMODULE_IGNORE_UNTRACKED
    3 : GIT_SUBMODULE_IGNORE_DIRTY
    4 : GIT_SUBMODULE_IGNORE_ALL
    else: throw(Exception("git_submodule_ignore_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_submodule_ignore_t (v:int) -> ref<git_submodule_ignore_t> :
  return git_submodule_ignore_t(new Int{v})

public defmethod print (o:OutputStream, v:git_submodule_ignore_t) :
  match(v) :
    (x:GIT_SUBMODULE_IGNORE_UNSPECIFIED) : print(o, "GIT_SUBMODULE_IGNORE_UNSPECIFIED")
    (x:GIT_SUBMODULE_IGNORE_NONE) : print(o, "GIT_SUBMODULE_IGNORE_NONE")
    (x:GIT_SUBMODULE_IGNORE_UNTRACKED) : print(o, "GIT_SUBMODULE_IGNORE_UNTRACKED")
    (x:GIT_SUBMODULE_IGNORE_DIRTY) : print(o, "GIT_SUBMODULE_IGNORE_DIRTY")
    (x:GIT_SUBMODULE_IGNORE_ALL) : print(o, "GIT_SUBMODULE_IGNORE_ALL")

public defmethod equal? (a:git_submodule_ignore_t, b:git_submodule_ignore_t) -> True|False :
  to-int(a) == to-int(b)

