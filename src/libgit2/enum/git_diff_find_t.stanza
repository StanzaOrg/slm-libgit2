; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_diff_find_t :
  import core

public deftype git_diff_find_t <: Equalable
public deftype GIT_DIFF_FIND_BY_CONFIG <: git_diff_find_t
public deftype GIT_DIFF_FIND_RENAMES <: git_diff_find_t
public deftype GIT_DIFF_FIND_RENAMES_FROM_REWRITES <: git_diff_find_t
public deftype GIT_DIFF_FIND_COPIES <: git_diff_find_t
public deftype GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED <: git_diff_find_t
public deftype GIT_DIFF_FIND_REWRITES <: git_diff_find_t
public deftype GIT_DIFF_BREAK_REWRITES <: git_diff_find_t
public deftype GIT_DIFF_FIND_AND_BREAK_REWRITES <: git_diff_find_t
public deftype GIT_DIFF_FIND_FOR_UNTRACKED <: git_diff_find_t
public deftype GIT_DIFF_FIND_ALL <: git_diff_find_t
public deftype GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE <: git_diff_find_t
public deftype GIT_DIFF_FIND_IGNORE_WHITESPACE <: git_diff_find_t
public deftype GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE <: git_diff_find_t
public deftype GIT_DIFF_FIND_EXACT_MATCH_ONLY <: git_diff_find_t
public deftype GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY <: git_diff_find_t
public deftype GIT_DIFF_FIND_REMOVE_UNMODIFIED <: git_diff_find_t

public val GIT_DIFF_FIND_BY_CONFIG = new GIT_DIFF_FIND_BY_CONFIG
public val GIT_DIFF_FIND_RENAMES = new GIT_DIFF_FIND_RENAMES
public val GIT_DIFF_FIND_RENAMES_FROM_REWRITES = new GIT_DIFF_FIND_RENAMES_FROM_REWRITES
public val GIT_DIFF_FIND_COPIES = new GIT_DIFF_FIND_COPIES
public val GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED = new GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED
public val GIT_DIFF_FIND_REWRITES = new GIT_DIFF_FIND_REWRITES
public val GIT_DIFF_BREAK_REWRITES = new GIT_DIFF_BREAK_REWRITES
public val GIT_DIFF_FIND_AND_BREAK_REWRITES = new GIT_DIFF_FIND_AND_BREAK_REWRITES
public val GIT_DIFF_FIND_FOR_UNTRACKED = new GIT_DIFF_FIND_FOR_UNTRACKED
public val GIT_DIFF_FIND_ALL = new GIT_DIFF_FIND_ALL
public val GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE = new GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE
public val GIT_DIFF_FIND_IGNORE_WHITESPACE = new GIT_DIFF_FIND_IGNORE_WHITESPACE
public val GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE = new GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE
public val GIT_DIFF_FIND_EXACT_MATCH_ONLY = new GIT_DIFF_FIND_EXACT_MATCH_ONLY
public val GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY = new GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY
public val GIT_DIFF_FIND_REMOVE_UNMODIFIED = new GIT_DIFF_FIND_REMOVE_UNMODIFIED

public defn to-int (v:git_diff_find_t) -> Int:
  match(v) :
    (x:GIT_DIFF_FIND_BY_CONFIG) : 0
    (x:GIT_DIFF_FIND_RENAMES) : (1 << 0)
    (x:GIT_DIFF_FIND_RENAMES_FROM_REWRITES) : (1 << 1)
    (x:GIT_DIFF_FIND_COPIES) : (1 << 2)
    (x:GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED) : (1 << 3)
    (x:GIT_DIFF_FIND_REWRITES) : (1 << 4)
    (x:GIT_DIFF_BREAK_REWRITES) : (1 << 5)
    (x:GIT_DIFF_FIND_AND_BREAK_REWRITES) :
        (to-int(GIT_DIFF_FIND_REWRITES) | to-int(GIT_DIFF_BREAK_REWRITES))
    (x:GIT_DIFF_FIND_FOR_UNTRACKED) : (1 << 6)
    (x:GIT_DIFF_FIND_ALL) : 0xff
    (x:GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE) : 0
    (x:GIT_DIFF_FIND_IGNORE_WHITESPACE) : (1 << 12)
    (x:GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE) : (1 << 13)
    (x:GIT_DIFF_FIND_EXACT_MATCH_ONLY) : (1 << 14)
    (x:GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY) : (1 << 15)
    (x:GIT_DIFF_FIND_REMOVE_UNMODIFIED) : (1 << 16)

public defn git_diff_find_t (v:Int) -> git_diff_find_t :
  switch {v == _}:
    0 : GIT_DIFF_FIND_BY_CONFIG
    (1 << 0) : GIT_DIFF_FIND_RENAMES
    (1 << 1) : GIT_DIFF_FIND_RENAMES_FROM_REWRITES
    (1 << 2) : GIT_DIFF_FIND_COPIES
    (1 << 3) : GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED
    (1 << 4) : GIT_DIFF_FIND_REWRITES
    (1 << 5) : GIT_DIFF_BREAK_REWRITES
    (to-int(GIT_DIFF_FIND_REWRITES) | to-int(GIT_DIFF_BREAK_REWRITES)) :
        GIT_DIFF_FIND_AND_BREAK_REWRITES
    (1 << 6) : GIT_DIFF_FIND_FOR_UNTRACKED
    0xff : GIT_DIFF_FIND_ALL
    0 : GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE
    (1 << 12) : GIT_DIFF_FIND_IGNORE_WHITESPACE
    (1 << 13) : GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE
    (1 << 14) : GIT_DIFF_FIND_EXACT_MATCH_ONLY
    (1 << 15) : GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY
    (1 << 16) : GIT_DIFF_FIND_REMOVE_UNMODIFIED
    else: throw(Exception("git_diff_find_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_diff_find_t (v:int) -> ref<git_diff_find_t> :
  return git_diff_find_t(new Int{v})

public defmethod print (o:OutputStream, v:git_diff_find_t) :
  match(v) :
    (x:GIT_DIFF_FIND_BY_CONFIG) : print(o, "GIT_DIFF_FIND_BY_CONFIG")
    (x:GIT_DIFF_FIND_RENAMES) : print(o, "GIT_DIFF_FIND_RENAMES")
    (x:GIT_DIFF_FIND_RENAMES_FROM_REWRITES) : print(o, "GIT_DIFF_FIND_RENAMES_FROM_REWRITES")
    (x:GIT_DIFF_FIND_COPIES) : print(o, "GIT_DIFF_FIND_COPIES")
    (x:GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED) : print(o, "GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED")
    (x:GIT_DIFF_FIND_REWRITES) : print(o, "GIT_DIFF_FIND_REWRITES")
    (x:GIT_DIFF_BREAK_REWRITES) : print(o, "GIT_DIFF_BREAK_REWRITES")
    (x:GIT_DIFF_FIND_AND_BREAK_REWRITES) : print(o, "GIT_DIFF_FIND_AND_BREAK_REWRITES")
    (x:GIT_DIFF_FIND_FOR_UNTRACKED) : print(o, "GIT_DIFF_FIND_FOR_UNTRACKED")
    (x:GIT_DIFF_FIND_ALL) : print(o, "GIT_DIFF_FIND_ALL")
    (x:GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE) : print(o, "GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE")
    (x:GIT_DIFF_FIND_IGNORE_WHITESPACE) : print(o, "GIT_DIFF_FIND_IGNORE_WHITESPACE")
    (x:GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE) : print(o, "GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE")
    (x:GIT_DIFF_FIND_EXACT_MATCH_ONLY) : print(o, "GIT_DIFF_FIND_EXACT_MATCH_ONLY")
    (x:GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY) : print(o, "GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY")
    (x:GIT_DIFF_FIND_REMOVE_UNMODIFIED) : print(o, "GIT_DIFF_FIND_REMOVE_UNMODIFIED")

public defmethod equal? (a:git_diff_find_t, b:git_diff_find_t) -> True|False :
  to-int(a) == to-int(b)

