; This file was auto-generated by lbstanza-wrapper
; Version 0.3.1
; Manual editing would be unwise
defpackage libgit2/enum/git_proxy_t :
  import core

public deftype git_proxy_t <: Equalable
public deftype GIT_PROXY_NONE <: git_proxy_t
public deftype GIT_PROXY_AUTO <: git_proxy_t
public deftype GIT_PROXY_SPECIFIED <: git_proxy_t

public val GIT_PROXY_NONE = new GIT_PROXY_NONE
public val GIT_PROXY_AUTO = new GIT_PROXY_AUTO
public val GIT_PROXY_SPECIFIED = new GIT_PROXY_SPECIFIED

public defn to-int (v:git_proxy_t) -> Int:
  match(v) :
    (x:GIT_PROXY_NONE) : 0
    (x:GIT_PROXY_AUTO) : 1
    (x:GIT_PROXY_SPECIFIED) : 2

public defn git_proxy_t (v:Int) -> git_proxy_t :
  switch {v == _}:
    0 : GIT_PROXY_NONE
    1 : GIT_PROXY_AUTO
    2 : GIT_PROXY_SPECIFIED
    else: throw(Exception("git_proxy_t: Invalid Enum Value: %_" % [v]))

public lostanza defn git_proxy_t (v:int) -> ref<git_proxy_t> :
  return git_proxy_t(new Int{v})

public defmethod print (o:OutputStream, v:git_proxy_t) :
  match(v) :
    (x:GIT_PROXY_NONE) : print(o, "GIT_PROXY_NONE")
    (x:GIT_PROXY_AUTO) : print(o, "GIT_PROXY_AUTO")
    (x:GIT_PROXY_SPECIFIED) : print(o, "GIT_PROXY_SPECIFIED")

public defmethod equal? (a:git_proxy_t, b:git_proxy_t) -> True|False :
  to-int(a) == to-int(b)

